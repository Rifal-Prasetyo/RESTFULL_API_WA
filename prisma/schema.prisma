generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int             @id @default(autoincrement())
  name             String
  noWa             String
  role             String          @default("user")
  password         String
  time             DateTime
  address          String
  note             String
  organization     String
  name_project     String
  isVerified       Int             @default(0)
  isTermsofService Int             @default(0)
  isBanned         Int             @default(0)
  image            String
  announcements    Announcements[]
  api              ApiKey?
  pushes           ApiPush[]
}

model ApiPush {
  id       Int      @id @default(autoincrement())
  type     Type
  type_msg String
  user_id  Int
  message  String
  toMsg    String
  time     DateTime
  User_use User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model ApiKey {
  id       Int    @id @default(autoincrement())
  user_id  Int    @unique
  api      String
  totalUse Int
  User_use User   @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model Announcements {
  id       Int      @id @default(autoincrement())
  user_id  Int
  body     String
  time     DateTime
  isShow   Int
  User_use User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model Log {
  id   Int      @id @default(autoincrement())
  type String
  date DateTime
  log  String
}

enum Type {
  PERSONAL
  GROUP
}
